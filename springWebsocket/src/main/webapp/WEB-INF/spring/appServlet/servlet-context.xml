<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/WEB-INF/views/include/" location="/include/**" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<websocket:handlers>
		<websocket:mapping handler="echoHandler" path="/echo"/>
		<!-- pom에서 websocket-api 필요함  -->
		<!-- 로그인한 유저의 아이디를 알고 싶어서 session을 써야 하니깐 websocket session에다가 Http session을 올려줘야함 
		 그래야 http session에 접근 할 수 있은 websocket은 기본적으로 http session을 가지고 있지 않음   -->
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"></beans:bean>
		</websocket:handshake-interceptors>
		<websocket:sockjs/>
	</websocket:handlers>
	
	<beans:bean id="echoHandler" class="com.yuni.util.EchoHandler"/>
	
	<context:component-scan base-package="com.yuni.app" />
	<context:component-scan base-package="com.yuni.controller" />
	
	<!-- @secured 어노테이션 활성화, 사용권한 제한 -->
	<sec:global-method-security secured-annotations="enabled"/>
	<!-- @secuted({"ROLE_ADMIN","ROLE_USER"})  << "ROLE_ADMIN","ROLE_USER" 권한이 없는 사용자는 403 에러 발생  -->
	
</beans:beans>
